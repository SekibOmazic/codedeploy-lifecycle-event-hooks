AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Validation hooks for blue-green-fargate service

Parameters:
  ServiceName:
    Type: String
    Default: blue-green-fargate

  BackendDomain:
    Type: String

  BackendPort:
    Type: Number
    Default: 9000

Resources:
  PreTrafficHook:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join
        - '-'
        - - 'CodeDeployHook_'
          - !Ref ServiceName
          - '_pre-traffic-hook'
      CodeUri: ../../
      Timeout: 300
      Handler: pre-traffic-hook.handler
      Policies:
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
              - "codedeploy:CreateCloudFormationDeployment"
            Resource:
              !Sub 'arn:${AWS::Partition}:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:*/*'
      Runtime: nodejs10.x
      DeploymentPreference:
        Enabled: false
        Role: ""
      Environment:
        Variables:
          TargetUrl: !Join # Example: https://api.your-domain.com:9000/user
            - ''
            - - 'https://'
              - !Ref BackendDomain
              - ':'
              - !Ref BackendPort
              - '/user'

  CodeDeployHookRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join
        - ''
        - - 'CodeDeployHookRole_'
          - !Ref ServiceName
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codedeploy.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: "Invoke-Hooks"
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - "lambda:InvokeFunction"
            Resource: !Sub 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:CodeDeployHook_*'
